<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.adm.eduMgr.dao.EduMgrDAO">
	
	<!-- 교육관리-->
		
	<!-- 교육과정관리-그룹관리 조회-->
	<select id="selectBaselineList" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" resultType="egovframework.com.adm.eduMgr.vo.Baseline" >			
         
		SELECT PROC_CD
			,PROC_YEAR
			,PROC_SEQ 
			,PROC_NAME
			,concat(EDU_START_DATE , ' ~ ' , EDU_END_DATE) AS EDU_DATE
			,EDU_START_DATE
			,EDU_END_DATE
			,TOT_STUDY_DATE /*학습일*/
			,STUDY_LVL
			,TIMESTAMPDIFF(DAY, EDU_START_DATE , EDU_END_DATE)+1 AS TOT_TIME_DIFF /*전체학습일*/
			,TIMESTAMPDIFF(DAY, EDU_START_DATE , CURDATE()) AS TIME_DIFF /*진행학습일*/			
			,LIMIT_PERSON_CNT
			,ENDING_STD_SCORE /*수료기준점수*/
			,ENDING_PROCESS_END_YN /*수료완료유무*/
			,PRACTICE_TOTAL_SCORE /*실기가중치*/
			,EVALUATION_TOTAL_SCORE	/*평가가중치*/		
			,THEORY_TOTAL_SCORE /*이론평가가중치*/	
			,PRACTICE_HUMAN_TOTAL_SCORE
			,PRACTICE_CAR_TOTAL_SCORE
			,PRACTICE_HUMAN_SCORE
			,PRACTICE_CAR_SCORE	
			,INSERT_DATE
			,INSERT_ID
			,UPDATE_DATE
			,UPDATE_ID
		FROM XBT_BASELINE	
		WHERE 1=1
		<choose>
			<when test='searchval != "" and searchval != null'>
				AND (
					PROC_NAME LIKE CONCAT('%' , #{searchval} , '%')
					OR PROC_SEQ LIKE  CONCAT('%' , #{searchval} , '%')
					OR EDU_START_DATE LIKE  CONCAT('%' , #{searchval} , '%')
					OR EDU_END_DATE LIKE  CONCAT('%' , #{searchval} , '%')
				)
			</when>
		</choose>		
        ORDER BY PROC_CD DESC 
	</select>  
	
	
	<!-- 차수 상세 -->
	<select id="selectBaseline" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" resultType="egovframework.com.adm.eduMgr.vo.Baseline">
		SELECT PROC_CD
			,PROC_YEAR
			,PROC_SEQ 
			,PROC_NAME
			,concat(EDU_START_DATE , ' ~ ' , EDU_END_DATE) AS EDU_DATE
			,EDU_START_DATE
			,EDU_END_DATE
			,TOT_STUDY_DATE /*학습일*/
			,STUDY_LVL
			,TIMESTAMPDIFF(DAY, EDU_START_DATE , EDU_END_DATE) AS TOT_TIME_DIFF /*전체학습일*/
			,TIMESTAMPDIFF(DAY, EDU_START_DATE , CURDATE()) AS TIME_DIFF /*진행학습일*/			
			,LIMIT_PERSON_CNT
			,IFNULL(ENDING_STD_SCORE, 0)AS ENDING_STD_SCORE /*수료기준점수*/
			,IFNULL(PASS_SCORE, 0)AS PASS_SCORE /*평가커트라인점수*/
			,IFNULL(PASS_THEORY_SCORE, 0)AS PASS_THEORY_SCORE /*이론커트라인기준점수*/
			,IFNULL(PASS_DANGER_SCORE, 0)AS PASS_DANGER_SCORE /*이론커트라인기준점수*/
			,IFNULL(PASS_PRACTICE_SCORE, 0)AS PASS_PRACTICE_SCORE /*실기커트라인기준점수*/
			,ENDING_PROCESS_END_YN /*수료완료유무*/
			,IFNULL(PRACTICE_TOTAL_SCORE, 0)AS practiceTotalScore /*실기가중치*/
			,IFNULL(EVALUATION_TOTAL_SCORE, 0)AS evaluationTotalScore	/*평가가중치*/		
			,IFNULL(THEORY_TOTAL_SCORE, 0)AS theoryTotalScore /*이론평가가중치*/		
			,IFNULL(PRACTICE_HUMAN_TOTAL_SCORE, 0)AS practiceHumanTotalScore /*대인실기커트라인기가중치*/
			,IFNULL(PRACTICE_CAR_TOTAL_SCORE, 0)AS practiceCarTotalScore /*차량실기커트라인기가중치*/
			,IFNULL(PRACTICE_HUMAN_SCORE, 0)AS practiceHumanScore /*대인실기커트라인*/
			,IFNULL(PRACTICE_CAR_SCORE, 0)AS practiceCarScore	/*대인실기커트라인*/			
			,INSERT_DATE
			,INSERT_ID
			,UPDATE_DATE
			,UPDATE_ID
			,TEACHER_ID
		FROM XBT_BASELINE	
		WHERE PROC_CD = #{procCd}
	</select>		
	
	<!-- 차수 등록 -->
	<insert id="insertBaseline" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" useGeneratedKeys="true" keyProperty="procCd">
		INSERT INTO XBT_BASELINE(
			PROC_YEAR,
			PROC_SEQ,
			PROC_NAME,
			EDU_START_DATE,
			EDU_END_DATE,
			TOT_STUDY_DATE,
			STUDY_LVL,
			LIMIT_PERSON_CNT,
			ENDING_STD_SCORE,
			PASS_SCORE,
			PASS_THEORY_SCORE,
			PASS_PRACTICE_SCORE,
			ENDING_PROCESS_END_YN,
			PRACTICE_TOTAL_SCORE,
			EVALUATION_TOTAL_SCORE,
			THEORY_TOTAL_SCORE,
			PRACTICE_HUMAN_TOTAL_SCORE,
			PRACTICE_CAR_TOTAL_SCORE,
			PRACTICE_HUMAN_SCORE,
			PRACTICE_CAR_SCORE,			
			INSERT_DATE,
			INSERT_ID,
			TEACHER_ID
		)VALUES(
			 DATE_FORMAT(NOW(),'%Y')
			,#{procSeq}
			,#{procName}
			,#{eduStartDate}
			,#{eduEndDate}
			,#{totStudyDate}
			,#{studyLvl}
			,#{limitPersonCnt}
			,#{endingStdScore}
			,#{passScore}
			,#{passTheoryScore}
			,#{passPracticeScore}
			,'N'
			,#{practiceTotalScore}
			,#{evaluationTotalScore}
			,#{theoryTotalScore}
			,#{practiceHumanTotalScore}
			,#{practiceCarTotalScore}
			,#{practiceHumanScore}
			,#{practiceCarScore}			
			,now()
			,#{insertId}
			,#{teacherId}
		)
	</insert>	
	
	
	<!-- 차수 수정 -->
	<update id="updateBaseline" parameterType="egovframework.com.adm.eduMgr.vo.Baseline">	
		UPDATE XBT_BASELINE
		SET 
			PROC_SEQ = #{procSeq},
			PROC_NAME = #{procName},
			EDU_START_DATE = #{eduStartDate},
			EDU_END_DATE = #{eduEndDate},
			TOT_STUDY_DATE = #{totStudyDate},
			LIMIT_PERSON_CNT = #{limitPersonCnt},
			ENDING_STD_SCORE = #{endingStdScore},
			PASS_SCORE = #{passScore},
			PASS_THEORY_SCORE = #{passTheoryScore},
			PASS_PRACTICE_SCORE = #{passPracticeScore},
			ENDING_PROCESS_END_YN = #{endingProcessEndYn},
			PRACTICE_TOTAL_SCORE = #{practiceTotalScore},
			EVALUATION_TOTAL_SCORE = #{evaluationTotalScore},
			THEORY_TOTAL_SCORE = #{theoryTotalScore},
			PRACTICE_HUMAN_TOTAL_SCORE = #{practiceHumanTotalScore},
			PRACTICE_CAR_TOTAL_SCORE = #{practiceCarTotalScore},
			PRACTICE_HUMAN_SCORE = #{practiceHumanScore},
			PRACTICE_CAR_SCORE = #{practiceCarScore},			
			STUDY_LVL = #{studyLvl},
			UPDATE_DATE = #{insertId},
			UPDATE_ID = now(),
			TEACHER_ID = #{teacherId}
		WHERE PROC_CD = #{procCd}
	</update>	
	
	<!-- 차수 삭제-->
	<delete id="deleteBaseline" parameterType="egovframework.com.adm.eduMgr.vo.Baseline">
		DELETE FROM XBT_BASELINE WHERE PROC_CD = #{procCd}
	</delete>	
	
	<!-- 교육생목로조회 -->
	<select id="selectBaselineStudentList" parameterType="egovframework.com.adm.eduMgr.vo.Student" resultType="egovframework.com.adm.eduMgr.vo.Student">
		SELECT 
			STUDENT_NO,
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			USER_ID,
			USER_NM,
			PROC_NM,
			COMP_NM,
			DEPT_NM,
			GAIN_SCORE,
			PASS_YN,
			ENDING_PROCESS_DATE,
			ENDING_YN,
			INSERT_DATE,
			INSERT_ID,
			UPDATE_DATE,
			UPDATE_ID
		FROM XBT_BASELINE_STUDENT_INFO
		WHERE PROC_CD = #{procCd}
	</select>	
	
	<!-- 교육생상세조회 -->
	<select id="selectBaselineStudent" parameterType="egovframework.com.adm.eduMgr.vo.Student" resultType="egovframework.com.adm.eduMgr.vo.Student">
		SELECT 
			STUDENT_NO,
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			USER_ID,
			PROC_NM,
			COMP_NM,
			DEPT_NM,
			GAIN_SCORE,
			PASS_YN,
			ENDING_PROCESS_DATE,
			ENDING_YN,
			INSERT_DATE,
			INSERT_ID,
			UPDATE_DATE,
			UPDATE_ID
		FROM XBT_BASELINE_STUDENT_INFO
		WHERE USER_ID = #{userId}
		AND PROC_CD = #{procCd}
	</select>	
		
			
	<!-- 교육생 등록 -->
	<insert id="insertBaselineStudent" parameterType="egovframework.com.adm.eduMgr.vo.Student">
		INSERT INTO XBT_BASELINE_STUDENT_INFO(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			EDU_CODE,
			EDU_NAME,			
			USER_ID,
			USER_NM,
			PROC_NM,
			COMP_NM,
			DEPT_NM,
			GAIN_SCORE,
			PASS_YN,
			ENDING_PROCESS_DATE,
			ENDING_YN,
			EDU_START_DATE,
			EDU_END_DATE,
			INSERT_DATE,
			INSERT_ID
		)VALUES(
			#{procCd}
			,#{procYear}
			,#{procSeq}
			,#{eduCode}
			,#{eduName}			
			,#{userId}
			,#{userNm}
			,#{procNm}
			,#{compNm}
			,#{deptNm}
			,0
			,'ING'
			,#{endingProcessDate}
			,'N'
			,#{eduStartDate}
			,#{eduEndDate}
			,now()
			,#{insertId}
		)
	
	</insert>	
	
	
	<!-- 교육생 삭제-->
	<delete id="deleteBaselineStudent" parameterType="egovframework.com.adm.eduMgr.vo.Student">
		DELETE FROM XBT_BASELINE_STUDENT_INFO WHERE USER_ID = #{userId}
	</delete>	
	
	<!-- 교육생 모두삭제-->
	<delete id="deleteBaselineStudentAll" parameterType="egovframework.com.adm.eduMgr.vo.Student">
		DELETE FROM XBT_BASELINE_STUDENT_INFO WHERE PROC_CD = #{procCd}
	</delete>		
	
	<!-- 학습데이터 최근데이터삭제-->
	<delete id="deleteBaselineLearning" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_STU_LEARNING_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</delete>		
	
	<!-- 학습 결과데이터 최근데이터삭제-->
	<delete id="deleteBaselineLearningResult" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_BASELINE_LEARNING 
		WHERE PROC_CD = #{procCd} 
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</delete>		
		
	<!-- 평가데이터 모두삭제-->
	<delete id="deleteBaselineEvaluationAll" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_STU_EVALUATION_PROGRESSING WHERE PROC_CD = #{procCd}
	</delete>		
	
	<!-- 평가 결과데이터 모두삭제-->
	<delete id="deleteBaselineEvaluationResultAll" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_BASELINE_EVALUATION WHERE PROC_CD = #{procCd}
	</delete>	
	
	<!-- 이론평가데이터 모두삭제-->
	<delete id="deleteBaselineTheoryAll" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_STU_THEORY_PROGRESSING WHERE PROC_CD = #{procCd}
	</delete>		
	
	<!-- 이론 결과데이터 모두삭제-->
	<delete id="deleteBaselineTheoryResultAll" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_STU_THEORY_PROGRESSING WHERE PROC_CD = #{procCd}
	</delete>		
	
	
	
	<!-- 교육일정  일정목록 -->
	<select id="selectEduDateList" parameterType="egovframework.com.adm.eduMgr.vo.EduDate" resultType="egovframework.com.adm.eduMgr.vo.EduDate">
		<![CDATA[
			SELECT DISTINCT
				#{procCd} as procCd,
				PROC_NM,
				(SELECT PROC_YEAR FROM XBT_BASELINE xb WHERE xb.PROC_CD = #{procCd}) AS procYear,
				(SELECT PROC_SEQ FROM XBT_BASELINE xb WHERE xb.PROC_CD = #{procCd}) AS procSeq,				
				EDU_START_DATE,
				EDU_END_DATE,
				CASE WHEN date_format(NOW(), '%Y-%m-%d') BETWEEN EDU_START_DATE AND EDU_END_DATE = 1 THEN 'true' 
				WHEN date_format(NOW(), '%Y-%m-%d') < EDU_END_DATE = 1 THEN 'future' 
				ELSE 'false' end  learnYn
			FROM XBT_BASELINE_EDU_DATE
			WHERE PROC_CD = #{procCd}
		]]>
	</select>	
	
	
	<!-- 교육일정 모듈목록-->
	<select id="selectEduModuleList" parameterType="egovframework.com.adm.eduMgr.vo.EduDate" resultType="egovframework.com.adm.eduMgr.vo.EduDate">
		<![CDATA[
			SELECT DISTINCT
				MODULE_ID,
			   (SELECT MAX(MODULE_NM) FROM XBT_MODULE_INFO_MASTER T2 WHERE T1.MODULE_ID = T2.MODULE_ID)AS MODULE_NM
			FROM XBT_BASELINE_EDU_DATE T1
			WHERE PROC_CD = #{procCd}
			AND EDU_START_DATE = #{eduStartDate}
			AND EDU_END_DATE = #{eduEndDate}	
		]]>
		<if test='learningType == "l" or learningType == "e"'>
			AND LEARNING_TYPE = #{learningType}
		</if>		
	</select>	
	
	<!-- 교육일정 메뉴목록-->
	<select id="selectEduMenuList" parameterType="egovframework.com.adm.eduMgr.vo.EduDate" resultType="egovframework.com.adm.eduMgr.vo.EduDate">
		<![CDATA[
			SELECT DISTINCT
				MENU_CD,
				MENU_NM,
				MODULE_ID,
				MODULE_TYPE,
				LEARNING_TYPE
			FROM XBT_BASELINE_EDU_DATE
			WHERE PROC_CD = #{procCd}
			AND EDU_START_DATE = #{eduStartDate}
			AND EDU_END_DATE = #{eduEndDate}
		]]>
	</select>				

	<!-- 교육일정  일정목록 팝업-->
	<select id="selectEduDateListPop" parameterType="egovframework.com.adm.eduMgr.vo.EduDate" resultType="egovframework.com.adm.eduMgr.vo.EduDate">
		<![CDATA[
			SELECT DISTINCT
				PROC_CD,
				PROC_NM,
				(SELECT PROC_YEAR FROM XBT_BASELINE xb WHERE xb.PROC_CD = t1.PROC_CD) AS procYear,
				(SELECT PROC_SEQ FROM XBT_BASELINE xb WHERE xb.PROC_CD = t1.PROC_CD) AS procSeq,
				MENU_CD,
				MENU_NM,
				MODULE_ID,
				MODULE_TYPE,
				LEARNING_TYPE,
				EDU_START_DATE,
				EDU_END_DATE,
				INSERT_ID,
				INSERT_DATE,
				EDU_START_DATE,
				EDU_END_DATE,
				CASE WHEN date_format(NOW(), '%Y-%m-%d') BETWEEN EDU_START_DATE AND EDU_END_DATE = 1 THEN 'true' 
				WHEN date_format(NOW(), '%Y-%m-%d') < EDU_END_DATE = 1 THEN 'future' 
				ELSE 'false' end  learnYn
			FROM XBT_BASELINE_EDU_DATE t1	
			WHERE PROC_CD = #{procCd}
			order by EDU_START_DATE , EDU_END_DATE 
		]]>
	</select>
	
	<!-- 교육일정 등록 -->
	<insert id="insertEduDate" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		INSERT INTO XBT_BASELINE_EDU_DATE(
			PROC_CD,
			PROC_NM,
			MODULE_ID,
			USER_ID,
			EDU_START_DATE,
			EDU_END_DATE,
			MENU_CD,
			MENU_NM,
			MODULE_TYPE,
			LEARNING_TYPE,
			INSERT_ID,
			INSERT_DATE
		)VALUES(
			#{procCd}
			,#{procNm}
			,#{moduleId}
			,#{userId}
			,#{eduStartDate}
			,#{eduEndDate}
			,#{menuCd}
			,#{menuNm}
			,#{moduleType}
			,#{learningType}
			,#{insertId}
			,now()
		)
	
	</insert>	
	
	
	<!-- 교육일정 삭제-->
	<delete id="deleteEduDate" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_BASELINE_EDU_DATE WHERE DAY_NO = #{dayNo}
	</delete>	
	
	<!-- 교육일정 모두삭제-->
	<delete id="deleteEduDateAll" parameterType="egovframework.com.adm.eduMgr.vo.EduDate">
		DELETE FROM XBT_BASELINE_EDU_DATE WHERE PROC_CD = #{procCd}
	</delete>	
		
	
	<!-- 차수복사 -->
	<insert id="insertBaselineCopy" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" useGeneratedKeys="true" keyProperty="procCd">
		INSERT INTO XBT_BASELINE
			(PROC_NAME
			,PROC_YEAR
			,PROC_SEQ
			,STUDY_LVL
			,EDU_START_DATE
			,EDU_END_DATE
			,TOT_STUDY_DATE
			,LIMIT_PERSON_CNT
			,THEORY_QUESTION_CNT
			,ENDING_STD_SCORE
			,ENDING_PROCESS_END_YN
			,PRACTICE_TOTAL_SCORE
			,THEORY_TOTAL_SCORE
			,EVALUATION_TOTAL_SCORE
			,PASS_SCORE
			,INSERT_DATE
			,INSERT_ID)
		SELECT
			#{procName}
			,PROC_YEAR
			,#{procSeq}
			,STUDY_LVL
			,#{eduStartDate}
			,#{eduEndDate}
			,#{totStudyDate}
			,LIMIT_PERSON_CNT
			,THEORY_QUESTION_CNT
			,ENDING_STD_SCORE
			,ENDING_PROCESS_END_YN
			,PRACTICE_TOTAL_SCORE
			,THEORY_TOTAL_SCORE
			,EVALUATION_TOTAL_SCORE
			,PASS_SCORE
			,now()
			,#{userId}
		FROM XBT_BASELINE
		WHERE PROC_CD = #{targetProcCd}
	</insert>	
				
	<!-- 차수데이터복사 -->
	<insert id="insertBaselineDateCopy" parameterType="egovframework.com.adm.eduMgr.vo.Baseline">
		INSERT INTO XBT_BASELINE_EDU_DATE(
			PROC_CD
			,PROC_NM
			,MENU_CD
			,MENU_NM
			,MODULE_ID
			,MODULE_TYPE
			,LEARNING_TYPE
			,USER_ID
			,EDU_START_DATE
			,EDU_END_DATE
			,INSERT_ID
			,INSERT_DATE
		)
		SELECT 
			 #{procCd}
			,#{procName}
			,MENU_CD
			,MENU_NM
			,MODULE_ID
			,MODULE_TYPE
			,LEARNING_TYPE
			,USER_ID
			,EDU_START_DATE
			,EDU_END_DATE
			,#{userId}
			,now()
		FROM XBT_BASELINE_EDU_DATE
		WHERE PROC_CD = #{targetProcCd}
		AND EDU_START_DATE = #{eduSartDate}
		AND EDU_END_DATE = #{eduEndDated}
	</insert>	
	
	<!-- 차수사용자 복사 -->
	<insert id="insertBaselineStudentCopy" parameterType="egovframework.com.adm.eduMgr.vo.Baseline">
		INSERT INTO XBT_BASELINE_STUDENT_INFO(
			PROC_CD
			,PROC_YEAR
			,PROC_SEQ
			,EDU_CODE
			,EDU_NAME
			,USER_ID
			,USER_NM
			,PROC_NM
			,COMP_NM
			,DEPT_NM
			,GAIN_SCORE
			,PRACTICE_BEFORE_SCORE
			,PRACTICE_SCORE
			,PRACTICE_YN
			,THEORY_SCORE
			,THEORY_YN
			,EVALUATION_SCORE
			,EVALUATION_YN
			,PASS_YN
			,EDU_START_DATE
			,EDU_END_DATE
			,ENDING_YN
			,INSERT_DATE
			,INSERT_ID
		)
		SELECT 
			#{procCd}
			,PROC_YEAR
			,#{procSeq}
			,EDU_CODE
			,EDU_NAME
			,USER_ID
			,USER_NM
			,PROC_NM
			,COMP_NM
			,DEPT_NM
			,0
			,0
			,0
			,'N'
			,0
			,'N'
			,0
			,'N'
			,'ING'
			,EDU_START_DATE
			,EDU_END_DATE
			,'N'
			,now()
			,#{userId}
		FROM XBT_BASELINE_STUDENT_INFO
		WHERE PROC_CD = #{targetProcCd}
	</insert>	
	
	<!-- 교육일정목록가져오기-->
	<select id="selectEduDateInfoList" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" resultType="egovframework.com.adm.eduMgr.vo.Baseline">
		SELECT DISTINCT
		EDU_START_DATE,
		EDU_END_DATE 
		FROM XBT_BASELINE_EDU_DATE
		WHERE PROC_CD = #{procCd}
		ORDER BY EDU_START_DATE
	</select>			
	
	<!-- 차수 수정 -->
	<update id="updateBaselineEduDate" parameterType="egovframework.com.adm.eduMgr.vo.Baseline">	
		UPDATE XBT_BASELINE_EDU_DATE
		SET 
			EDU_START_DATE = #{eduStartDateCopy},
			EDU_END_DATE = #{eduEndDateCopy}
		WHERE PROC_CD = #{procCd}
		AND EDU_START_DATE = #{eduStartDate}
		AND EDU_START_DATE = #{eduEndDate}
	</update>	
	
	<!-- 차수 겹치는 데이터 확인 -->
	<select id="selectBaselineDataCount" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" resultType="int">
		SELECT 
			COUNT(PROC_CD)
		FROM XBT_BASELINE WHERE date_format(#{eduStartDate}, '%Y-%m-%d') BETWEEN EDU_START_DATE AND EDU_END_DATE
	</select>	
	
	<!-- 차수목록조회-->
	<select id="selectBaselineProcSeqList" parameterType="egovframework.com.adm.eduMgr.vo.Baseline" resultType="egovframework.com.adm.eduMgr.vo.Baseline" >			
		SELECT
			DISTINCT PROC_YEAR , PROC_SEQ , EDU_CODE
		FROM XBT_BASELINE_STUDENT_INFO
		WHERE EDU_CODE = #{eduCode}
		AND PROC_YEAR = #{procYear}
		ORDER BY PROC_CD DESC, EDU_CODE DESC
	</select> 	
		
</mapper>