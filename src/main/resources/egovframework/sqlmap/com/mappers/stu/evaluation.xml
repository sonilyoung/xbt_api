<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.stu.evaluation.dao.EvaluationDAO">
	
	
	<!-- 등록된평가문제 체크 -->
	<select id="selectEvaluationProblemsCount" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_EVALUATION_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>
	
	<!-- 등록된학습문제 횟수확인 -->
	<select id="selectEvaluationProblemsMaxkey" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">
		SELECT 
			IFNULL(MAX(TRY_SEQ), 0) AS trySeq
		FROM XBT_STU_EVALUATION_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
	</select>		
	
		<!-- 이론평가 유무확인 -->
	<select id="selectEvaluationProcessYnCount" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_EVALUATION_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear}
		AND PROC_SEQ = #{procSeq}
		and TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}	
		AND END_YN = 'Y'
	</select>		
	
	<!-- 평가문제 등록 -->
	<insert id="insertEvaluationProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem">
		INSERT INTO XBT_STU_EVALUATION_PROGRESSING(
		MODULE_ID, 
		PROC_CD, 
		PROC_YEAR, 
		PROC_SEQ,
		TRY_SEQ, 
		STUDY_LVL,
		USER_ID,
		BAG_SCAN_ID, 
		ACTION_DIV, 
		INSERT_DATE)
		SELECT 
			MODULE_ID,
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			STUDY_LVL,
			#{userId},
			BAG_SCAN_ID ,
			ACTION_DIV ,
			NOW()
		FROM 
			XBT_MODULE_INFO_DETAIL 
		WHERE MODULE_ID = #{moduleId}
		LIMIT #{questionCnt}
	</insert>		
	
	
	<!-- 평가문제 종료-->
	<update id="updateEvaluationEnd" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_EVALUATION_PROGRESSING 
		SET END_YN = #{endYn}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
	</update>		
	
	<!-- 평가문제출제목록가져오기 -->
	<select id="selectEvaluationProblemsList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV, 
			INSERT_DATE
		FROM XBT_STU_EVALUATION_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = 'N'
		ORDER BY RAND() 
	</select>	
	
	<!-- 평가정답확인 -->
	<select id="selectEvaluationAnswer" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT 
			DISTINCT (ACTION_DIV = #{userActionDiv}) as answer,  
			(ACTION_DIV) as answerDiv
		FROM XBT_STU_EVALUATION_PROGRESSING 
		WHERE 
		MODULE_ID = #{moduleId} 
		and PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
		AND END_YN = 'N'
	</select>		
	
	
	<!-- 평가정답선택-->
	<update id="updateEvaluationAnswer" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_EVALUATION_PROGRESSING 
		SET 
			USER_ACTION_DIV = #{userActionDiv},
			GAIN_SCORE = #{gainScore}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
	</update>		
	
	<!-- 결과 등록 -->
	<insert id="insertEvaluationResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		INSERT INTO XBT_BASELINE_EVALUATION(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			TRY_SEQ,
			USER_ID,
			TEST_DATE,
			STUDY_LVL,
			MODULE_ID,
			END_YN,
			INSERT_DATE
		)VALUES(
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			#{userId},
			now(),
			#{studyLvl},
			#{moduleId},
			'Y',
			now()
		)
	</insert>
	
	
	<!-- 평가종료점수합산 -->
	<select id="selectEvaluationSum" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT floor(gainScore/#{questionCnt}) AS gainScore 
		FROM (		
			SELECT 
				IFNULL(SUM(GAIN_SCORE), 0) AS gainScore
			FROM XBT_STU_EVALUATION_PROGRESSING 
			WHERE 
			MODULE_ID = #{moduleId} 
			AND PROC_CD = #{procCd}  
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND TRY_SEQ = #{trySeq}
			AND USER_ID = #{userId}
			AND END_YN = 'N'
		)TOT	
	</select>	
	
	<!-- 평가종료 틀린갯수 맞은갯수 확인 -->
	<select id="selectEvaluationResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT
			COUNT(*)AS questionCnt,
			COUNT(CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 1 END) AS rightCnt,
			COUNT(CASE WHEN ACTION_DIV != USER_ACTION_DIV || USER_ACTION_DIV IS NULL THEN 1 END) AS wrongCnt,
			COUNT(CASE WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 1 END) as banCnt	
		FROM
			XBT_STU_EVALUATION_PROGRESSING
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>			
	
	<!-- 평가종료 결과데이터 확인-->
	<select id="selectEvaluationBaselineResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="int">	
		SELECT COUNT(*) 
		FROM XBT_BASELINE_EVALUATION
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}	
	</select>	
	
	<!-- 평가정답선택-->
	<update id="updateEvaluationResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_BASELINE_EVALUATION 
		SET 
			GAIN_SCORE = #{gainScore},
			PASS_YN = #{passYn},
			RIGHT_CNT = #{rightCnt},
			WRONG_CNT = #{wrongCnt},	
			BAN_CNT = #{banCnt}	
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>		
					

</mapper>