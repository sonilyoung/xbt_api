<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.stu.learning.dao.LearningDAO">
	 
	
	<!-- 차수정보가져오기 -->
	<select id="selectBaseline" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT 
			T1.PROC_CD ,
			T1.PROC_YEAR ,
			T1.PROC_SEQ ,
			T1.EDU_START_DATE ,
			T1.EDU_END_DATE ,
			T1.THEORY_QUESTION_CNT,
			T1.PASS_SCORE,
			T1.PASS_THEORY_SCORE,
			T1.PASS_DANGER_SCORE,
			T1.PASS_PRACTICE_SCORE,
			T1.PRACTICE_HUMAN_TOTAL_SCORE,
			T1.PRACTICE_CAR_TOTAL_SCORE,
			T1.PRACTICE_HUMAN_SCORE,
			T1.PRACTICE_CAR_SCORE		
		FROM XBT_BASELINE T1 INNER JOIN XBT_BASELINE_STUDENT_INFO T2
		ON T1.PROC_CD = T2.PROC_CD 
		AND T1.PROC_YEAR = T2.PROC_YEAR 
		AND T1.PROC_SEQ = T2.PROC_SEQ 
		AND T2.USER_ID = #{userId}
		AND date_format(NOW(), '%Y-%m-%d') BETWEEN T1.EDU_START_DATE AND T1.EDU_END_DATE
		ORDER BY PROC_CD DESC
		LIMIT 1		
	</select>	
	
	<!-- 사용자교육정보가져오기 -->
	<select id="selectLearning" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">	
		SELECT 
			DAY_NO ,
			PROC_CD ,
			PROC_NM ,
			MENU_CD ,
			MENU_NM ,
			MODULE_ID ,
			MODULE_TYPE ,
			LEARNING_TYPE,
			USER_ID ,
			EDU_START_DATE , 
			EDU_END_DATE 
		FROM XBT_BASELINE_EDU_DATE 
		WHERE  
		MENU_CD = #{menuCd} 
		AND USER_ID = #{userId} 
		AND PROC_CD = #{procCd}
	</select>
	
	<!-- 사용자교육모듈정보 -->
	<select id="selectModuleInfo" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">			
		SELECT 
			MODULE_ID ,
			MODULE_NM ,
			QUESTION_CNT ,
			TIME_LIMIT ,
			STUDY_LVL ,
			MODULE_TYPE ,
			SLIDE_SPEED 
			<!-- PASS_SCORE -->
		FROM XBT_MODULE_INFO_MASTER
		WHERE MODULE_ID = 
		(
			SELECT MAX(MODULE_ID)  
			FROM XBT_BASELINE_EDU_DATE 
			WHERE  
			MENU_CD = #{menuCd}  
			AND USER_ID = #{userId}  
			AND PROC_CD = #{procCd}
			AND date_format(NOW(), '%Y-%m-%d') BETWEEN EDU_START_DATE AND EDU_END_DATE 
		 )	
	</select>
	
	
	<!-- 학습문제조회 -->
	<select id="selectLearningProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID,
			STUDY_LVL,
			BAG_SCAN_ID ,
			ACTION_DIV ,
			ACTION_DIV_NAME	
		FROM XBT_MODULE_INFO_DETAIL WHERE MODULE_ID  = #{moduleId}
		LIMIT #{questionCnt}
	</select>
	
	<!-- 등록된학습문제 체크 -->
	<select id="selectLearningProblemsCount" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_LEARNING_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
	</select>
	
	<!-- 등록된학습문제 횟수확인 -->
	<select id="selectLearningProblemsMaxkey" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">
		SELECT 
			IFNULL(MAX(TRY_SEQ), 0) AS trySeq
		FROM XBT_STU_LEARNING_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
	</select>	
	
	<!-- 학습문제 등록 -->
	<insert id="insertLearningProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem">
		INSERT INTO XBT_STU_LEARNING_PROGRESSING(
		MODULE_ID, 
		PROC_CD, 
		PROC_YEAR, 
		PROC_SEQ, 
		TRY_SEQ,
		STUDY_LVL,
		USER_ID,
		BAG_SCAN_ID, 
		ACTION_DIV, 
		INSERT_DATE)
		SELECT 
			MODULE_ID,
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			STUDY_LVL,
			#{userId},
			BAG_SCAN_ID ,
			ACTION_DIV ,
			NOW()
		FROM 
			XBT_MODULE_INFO_DETAIL 
		WHERE MODULE_ID = #{moduleId}
		LIMIT #{questionCnt}
	</insert>		
	
	
	<!-- 학습문제 초기화-->
	<update id="updateLearningProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem">	
		UPDATE 
			XBT_STU_LEARNING_PROGRESSING 
		SET END_YN = 'N',
		USER_ACTION_DIV = NULL,
		GAIN_SCORE = 0
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>		
	
	<!-- 학습문제출제목록가져오기 -->
	<select id="selectLearnProblemsList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			<!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y'
			 -->
			ELSE 'N'
			END AS answerYn,   
			INSERT_DATE
		FROM XBT_STU_LEARNING_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		LIMIT #{questionCnt}
	</select>	
	
	<!-- 학습문제출제목록가져오기 -->
	<select id="selectLearnProblemsResultList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as actionDivName,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = USER_ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as userActionDivName,			
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			<!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y'
			 -->
			ELSE 'N'
			END AS answerYn,  
			INSERT_DATE
		FROM XBT_STU_LEARNING_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		LIMIT #{questionCnt}
	</select>	
	
	<!-- 학습오답노트팝업데이터 -->
	<select id="selectOxLearning" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as actionDivName,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = USER_ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as userActionDivName,			
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			<!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y' -->
			ELSE 'N'
			END AS answerYn,  
			INSERT_DATE
		FROM XBT_STU_LEARNING_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		AND USER_ACTION_DIV IS NOT NULL
	</select>			
	
	<!-- 학습문제출제목록상세정보가져오기 -->
	<select id="selectLearnProblemsResult" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			<choose>
				<when test='languageCode == "kr"'>
					ANSWER_ITEM AS unitName,
				</when>
				<when test='languageCode == "en"'>
					ANSWER_ITEM_EN AS unitName,				
				</when>
				<when test='languageCode == "ch"'>
					ANSWER_ITEM_CH AS unitName,
				</when>				
				<when test='languageCode == "jp"'>
					ANSWER_ITEM AS unitName,
				</when>
				<otherwise>
					, UNIT_NAME /*물품명*/
				</otherwise>											
			</choose>
			(SELECT OPEN_YN FROM XBT_UNIT_GROUP T1 WHERE T1.UNIT_GROUP_CD = T4.UNIT_GROUP_CD ) AS openYn,
			(SELECT PASS_YN FROM XBT_UNIT_GROUP T1 WHERE T1.UNIT_GROUP_CD = T4.UNIT_GROUP_CD ) AS passYn												
		FROM XBT_BAG_CONST_UNIT T3 INNER JOIN XBT_UNIT_INFO T4
		ON T3.UNIT_ID = T4.UNIT_ID 
		WHERE BAG_SCAN_ID = #{bagScanId}
	</select>	
	
	<!-- 정답문제가져오기 -->
	<select id="selectXrayAnswer" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			UNIT_ID,
			<choose>
				<when test='languageCode == "kr" or languageCode == "ko" '>
					UNIT_NAME,
				</when>
				<when test='languageCode == "en"'>
					UNIT_NAME,	
				</when>
				<when test='languageCode == "ch"'>
					UNIT_NAME,
				</when>				
				<when test='languageCode == "jp"'>
					UNIT_NAME,
				</when>
				<otherwise>
					UNIT_NAME,
				</otherwise>											
			</choose>			
			UNIT_GROUP_CD											
		FROM XBT_BAG_INFO
		WHERE BAG_SCAN_ID = #{bagScanId}
	</select>		
	
	
	<!-- 학습정답확인 -->
	<select id="selectLearnAnswer" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT 
			DISTINCT (ACTION_DIV = #{userActionDiv}) as answer,  
			(ACTION_DIV) as answerDiv
		FROM XBT_STU_LEARNING_PROGRESSING 
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
		AND END_YN = 'N'
	</select>	


	<!-- 관리자에셋팅된 점수체게 가져오기 -->
	<select id="selectPointStdScore" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.PointStd">
		SELECT
			POINTS_DETAIL_NO, 
			POINTS_STD_NO, 
			ACTION_DIV, 
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T2 WHERE T2.GROUP_ID = 'actionDiv' 
			 AND T2.CODE_VALUE = ACTION_DIV AND T2.USE_YN = 'Y' AND T2.LANGUAGE_CODE = 'kr')AS actionDivName,			
			BAN_UNIT_SCORE, 
			LIMIT_UNIT_SCORE, 
			QUESTION_UNIT_SCORE, 
			PASS_UNIT_SCORE 
		FROM
			XBT_POINTS_STD_DETAIL T1
		WHERE POINTS_STD_NO = (SELECT MAX(POINTS_STD_NO) FROM XBT_POINTS_STD_MASTER WHERE USE_YN = 'Y')
		AND ACTION_DIV = #{answerDiv}
	</select>	
	
	
	<!-- 학습정답선택-->
	<update id="updateLearningAnswer" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_LEARNING_PROGRESSING 
		SET 
			USER_ACTION_DIV = #{userActionDiv},
			GAIN_SCORE = #{gainScore}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
	</update>
	
	<!-- 학습문제종료-->
	<update id="updateLearningEnd" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_LEARNING_PROGRESSING 
		SET 
			END_YN = #{endYn}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>	
	
	<!-- 결과 등록 -->
	<insert id="insertLearningResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		INSERT INTO XBT_BASELINE_LEARNING(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			TRY_SEQ,
			USER_ID,
			TEST_DATE,
			STUDY_LVL,
			MODULE_ID,
			END_YN,
			INSERT_DATE
		)VALUES(
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			#{userId},
			now(),
			#{studyLvl},
			#{moduleId},
			'Y',
			now()
		)
	</insert>
	
	
	<!-- 학습종료점수합산 -->
	<select id="selectLearningSum" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT floor(gainScore/#{questionCnt}) AS gainScore 
		FROM (
			SELECT 
				IFNULL(SUM(GAIN_SCORE), 0) AS gainScore
			FROM XBT_STU_LEARNING_PROGRESSING 
			WHERE 
			MODULE_ID = #{moduleId} 
			AND PROC_CD = #{procCd}  
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND TRY_SEQ = #{trySeq}
			AND USER_ID = #{userId}
			AND END_YN = 'N'
		)TOT	
	</select>		
	
	<!-- 학습종료 틀린갯수 맞은갯수 확인 -->
	<select id="selectLearningResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT
			COUNT(*)AS questionCnt,
			COUNT(CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 1 END) AS rightCnt,
			COUNT(CASE WHEN ACTION_DIV != USER_ACTION_DIV || USER_ACTION_DIV IS NULL THEN 1 END) AS wrongCnt,
			COUNT(CASE WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 1 END) as banCnt	
		FROM
			XBT_STU_LEARNING_PROGRESSING
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>		

	<!-- 학습종료 결과데이터 확인-->
	<select id="selectLearningBaselineResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="int">	
		SELECT COUNT(*) 
		FROM XBT_BASELINE_LEARNING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}	
	</select>
	
	<!-- 학습종료 결과데이터-->
	<update id="updateLearningResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_BASELINE_LEARNING 
		SET 
			GAIN_SCORE = #{gainScore},
			PASS_YN = #{passYn},
			RIGHT_CNT = #{rightCnt},
			WRONG_CNT = #{wrongCnt},	
			BAN_CNT = #{banCnt}	
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>	
	
	<!-- 오답문제조회 -->
	<select id="selectWrongAnswerProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID,
			STUDY_LVL,
			BAG_SCAN_ID ,
			ACTION_DIV 
		FROM
			XBT_STU_LEARNING_PROGRESSING	
		WHERE 
			ACTION_DIV != USER_ACTION_DIV
			and USER_ACTION_DIV IS NOT NULL
			and MODULE_ID = #{moduleId}
			and PROC_CD = #{procCd} 
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND USER_ID = #{userId}
			AND END_YN = 'Y'
	</select>	
	
	<!-- 등록된오답문제 횟수확인 -->
	<select id="selectWrongAnswerProblemsMaxkey" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">
		SELECT 
			IFNULL(MAX(TRY_SEQ), 0) AS trySeq
		FROM XBT_STU_WRONG_ANSWER_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
	</select>		
	
	
	<!-- 등록된오답문제 체크 -->
	<select id="selectWrongAnswerProblemsCount" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_WRONG_ANSWER_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
	</select>	
	
	<!-- 오답문제 등록 -->
	<insert id="insertWrongAnswerProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem">
		INSERT INTO XBT_STU_WRONG_ANSWER_PROGRESSING(
		MODULE_ID, 
		PROC_CD, 
		PROC_YEAR, 
		PROC_SEQ, 
		TRY_SEQ,
		STUDY_LVL,
		USER_ID,
		BAG_SCAN_ID, 
		ACTION_DIV, 
		INSERT_DATE)
		SELECT 
			DISTINCT MODULE_ID,
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			STUDY_LVL,
			#{userId},
			BAG_SCAN_ID ,
			ACTION_DIV ,
			NOW()
		FROM 
			XBT_STU_LEARNING_PROGRESSING 
		WHERE 
			ACTION_DIV != USER_ACTION_DIV
			AND USER_ACTION_DIV IS NOT NULL
			AND MODULE_ID = #{moduleId}
			AND PROC_CD = #{procCd} 
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND USER_ID = #{userId}
			AND END_YN = 'Y'
			AND TRY_SEQ = (
				SELECT
					MIN(TRY_SEQ)
				FROM 
					XBT_STU_LEARNING_PROGRESSING 
				WHERE 
					ACTION_DIV != USER_ACTION_DIV
					AND USER_ACTION_DIV IS NOT NULL
					AND MODULE_ID = #{moduleId}
					AND PROC_CD = #{procCd} 
					AND PROC_YEAR = #{procYear} 
					AND PROC_SEQ = #{procSeq}
					AND USER_ID = #{userId}
					AND END_YN = 'Y'				
			)
			<!-- LIMIT #{questionCnt} -->
	</insert>		
				
	<!-- 오답문제출제목록가져오기 -->
	<select id="selectWrongAnswerProblemsList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			<!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y' -->
			ELSE 'N'
			END AS answerYn,  
			INSERT_DATE
		FROM XBT_STU_WRONG_ANSWER_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		<!-- LIMIT #{questionCnt} -->
	</select>		
	
	<!-- 오답정답확인 -->
	<select id="selectWrongAnswer" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT 
			DISTINCT (ACTION_DIV = #{userActionDiv}) as answer,  
			(ACTION_DIV) as answerDiv
		FROM XBT_STU_WRONG_ANSWER_PROGRESSING 
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
		AND END_YN = 'N'
	</select>	
	
	<!-- 오답문제정답선택-->
	<update id="updateWrongAnswer" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_WRONG_ANSWER_PROGRESSING 
		SET 
			USER_ACTION_DIV = #{userActionDiv},
			GAIN_SCORE = #{gainScore}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
	</update>	
	
	
	<!-- 결과 등록 -->
	<insert id="insertWrongAnswerResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		INSERT INTO XBT_BASELINE_WRONG_ANSWER(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			TRY_SEQ,
			USER_ID,
			TEST_DATE,
			STUDY_LVL,
			MODULE_ID,
			END_YN,
			INSERT_DATE
		)VALUES(
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			#{userId},
			now(),
			#{studyLvl},
			#{moduleId},
			'Y',
			now()
		)
	</insert>	
	
	
	<!-- 오답문제종료점수합산 -->
	<select id="selectWrongAnswerSum" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT floor(gainScore/#{questionCnt}) AS gainScore 
		FROM (
			SELECT 
				IFNULL(SUM(GAIN_SCORE), 0) AS gainScore
			FROM XBT_STU_WRONG_ANSWER_PROGRESSING 
			WHERE 
			MODULE_ID = #{moduleId} 
			AND PROC_CD = #{procCd}  
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND TRY_SEQ = #{trySeq}
			AND USER_ID = #{userId}
			AND END_YN = 'N'
		)TOT
	</select>		
	
	
	<!-- 오답문제종료 결과데이터 확인 -->
	<select id="selectWrongAnswerBaselineResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="int">
		SELECT COUNT(*) 
		FROM XBT_BASELINE_WRONG_ANSWER
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>		
	
	<!-- 오답문제종료 틀린갯수 맞은갯수 확인 -->
	<select id="selectWrongAnswerResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT
			COUNT(*)AS questionCnt,
			COUNT(CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 1 END) AS rightCnt,
			COUNT(CASE WHEN ACTION_DIV != USER_ACTION_DIV || USER_ACTION_DIV IS NULL THEN 1 END) AS wrongCnt,
			COUNT(CASE WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 1 END) as banCnt	
		FROM
			XBT_STU_WRONG_ANSWER_PROGRESSING
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>			
	
	<!-- 오답문제종료-->
	<update id="updateWrongAnswerEnd" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_WRONG_ANSWER_PROGRESSING 
		SET 
			END_YN = #{endYn}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>		
	
	<!-- 오답문제종료 결과데이터-->
	<update id="updateWrongAnswerResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_BASELINE_WRONG_ANSWER 
		SET 
			GAIN_SCORE = #{gainScore},
			PASS_YN = #{passYn},
			RIGHT_CNT = #{rightCnt},
			WRONG_CNT = #{wrongCnt},	
			BAN_CNT = #{banCnt}	
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>		
	
	
	
	<!-- 오답문제출제목록가져오기 -->
	<select id="selectWrongAnswerProblemsResultList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as actionDivName,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = USER_ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as userActionDivName,			
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			<!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y' -->
			ELSE 'N'
			END AS answerYn,  
			INSERT_DATE
		FROM XBT_STU_WRONG_ANSWER_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
	</select>		
	
		
		
</mapper>