<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.stu.learning.dao.LearningDAO">
	 
	<!-- 강화학습문제조회 -->
	<select id="selectForceLearningProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT
			#{moduleId},
			STUDY_LVL,
			BAG_SCAN_ID ,
			ACTION_DIV ,
			ACTION_DIV_NAME	
		FROM XBT_BAG_INFO
		WHERE UNIT_GROUP_CD IN (
			SELECT 
				DISTINCT UNIT_GROUP_CD 
			FROM XBT_BAG_INFO 
			WHERE BAG_SCAN_ID IN (
				SELECT DISTINCT BAG_SCAN_ID 
				FROM XBT_STU_LEARNING_PROGRESSING 
				WHERE END_YN = 'Y' 
				AND ACTION_DIV != USER_ACTION_DIV 
				AND USER_ID = #{userId}
			)
		) LIMIT 25		
	</select>
	
	<!-- 등록된강화학습문제 체크 -->
	<select id="selectForceLearningProblemsCount" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_FORCE_LEARNING_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
	</select>
	
	<!-- 등록된강화학습문제 횟수확인 -->
	<select id="selectForceLearningProblemsMaxkey" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">
		SELECT 
			IFNULL(MAX(TRY_SEQ), 0) AS trySeq
		FROM XBT_STU_FORCE_LEARNING_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
	</select>	
	
	<!-- 강화학습문제 등록 -->
	<insert id="insertForceLearningProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem">
		INSERT INTO XBT_STU_FORCE_LEARNING_PROGRESSING(
		MODULE_ID, 
		PROC_CD, 
		PROC_YEAR, 
		PROC_SEQ, 
		TRY_SEQ,
		STUDY_LVL,
		USER_ID,
		BAG_SCAN_ID, 
		ACTION_DIV, 
		INSERT_DATE)
		SELECT 
			#{moduleId},
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			STUDY_LVL,
			#{userId},
			BAG_SCAN_ID ,
			ACTION_DIV ,
			NOW()
		FROM XBT_BAG_INFO
		WHERE UNIT_GROUP_CD IN (
			SELECT 
				DISTINCT UNIT_GROUP_CD 
			FROM XBT_BAG_INFO 
			WHERE BAG_SCAN_ID IN (
				SELECT DISTINCT BAG_SCAN_ID 
				FROM XBT_STU_LEARNING_PROGRESSING 
				WHERE END_YN = 'Y' 
				AND ACTION_DIV != USER_ACTION_DIV 
				AND USER_ID = #{userId}
			)
		) LIMIT 25		
	</insert>		
	
	
	<!-- 강화학습문제 초기화-->
	<update id="updateForceLearningProblems" parameterType="egovframework.com.stu.learning.vo.LearningProblem">	
		UPDATE 
			XBT_BASELINE_LEARNING 
		SET END_YN = 'N'
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
	</update>		
	
	<!-- 강화학습문제출제목록가져오기 -->
	<select id="selectForceLearningProblemsList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			<!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y'
			-->
			ELSE 'N'
			END AS answerYn,   
			INSERT_DATE
		FROM XBT_STU_FORCE_LEARNING_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		LIMIT #{questionCnt}
	</select>	
	
	<!-- 강화학습문제출제목록가져오기 -->
	<select id="selectForceLearningProblemsResultList" parameterType="egovframework.com.stu.learning.vo.LearningProblem" resultType="egovframework.com.stu.learning.vo.LearningProblem">			
		SELECT 
			MODULE_ID, 
			PROC_CD, 
			PROC_YEAR, 
			PROC_SEQ, 
			USER_ID,
			BAG_SCAN_ID, 
			ACTION_DIV,
			USER_ACTION_DIV,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as actionDivName,
			(SELECT CODE_NAME FROM XBT_COMMON_CODE T1 WHERE T1.GROUP_ID = 'actionDiv' 
				AND T1.CODE_VALUE = USER_ACTION_DIV AND T1.USE_YN = 'Y' AND language_code = #{languageCode})as userActionDivName,			
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'
			 <!--
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'Y'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'Y'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'Y'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'Y'4
			-->
			ELSE 'N'
			END AS answerYn,  
			INSERT_DATE
		FROM XBT_STU_FORCE_LEARNING_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		LIMIT #{questionCnt}
	</select>		
	
	
	
	<!-- 강화학습정답확인 -->
	<select id="selectForceLearningAnswer" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT 
			DISTINCT (ACTION_DIV = #{userActionDiv}) as answer,  
			(ACTION_DIV) as answerDiv
		FROM XBT_STU_FORCE_LEARNING_PROGRESSING 
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
		AND END_YN = 'N'
	</select>	


	<!-- 강화학습정답선택-->
	<update id="updateForceLearningAnswer" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_FORCE_LEARNING_PROGRESSING 
		SET 
			USER_ACTION_DIV = #{userActionDiv},
			GAIN_SCORE = #{gainScore}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND BAG_SCAN_ID = #{bagScanId}
	</update>
	
	<!-- 강화학습문제종료-->
	<update id="updateForceLearningEnd" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_FORCE_LEARNING_PROGRESSING 
		SET 
			END_YN = #{endYn}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>	
	
	<!-- 결과 등록 -->
	<insert id="insertForceLearningResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		INSERT INTO XBT_BASELINE_FORCE_LEARNING(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			TRY_SEQ,
			USER_ID,
			TEST_DATE,
			STUDY_LVL,
			MODULE_ID,
			END_YN,
			INSERT_DATE
		)VALUES(
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			#{userId},
			now(),
			#{studyLvl},
			#{moduleId},
			'Y',
			now()
		)
	</insert>
	
	
	<!-- 강화학습종료점수합산 -->
	<select id="selectForceLearningSum" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT floor(gainScore/#{questionCnt}) AS gainScore 
		FROM (
			SELECT 
				IFNULL(SUM(GAIN_SCORE), 0) AS gainScore
			FROM XBT_STU_FORCE_LEARNING_PROGRESSING 
			WHERE 
			MODULE_ID = #{moduleId} 
			AND PROC_CD = #{procCd}  
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND TRY_SEQ = #{trySeq}
			AND USER_ID = #{userId}
			AND END_YN = 'N'
		)TOT
	</select>		
	
	<!-- 강화학습종료 틀린갯수 맞은갯수 확인 -->
	<select id="selectForceLearningResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="egovframework.com.stu.learning.vo.Learning">
		SELECT
			COUNT(*)AS questionCnt,
			COUNT(CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 1 END) AS rightCnt,
			COUNT(CASE WHEN ACTION_DIV != USER_ACTION_DIV || USER_ACTION_DIV IS NULL THEN 1 END) AS wrongCnt,
			COUNT(CASE WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 1 END) as banCnt	
		FROM
			XBT_STU_FORCE_LEARNING_PROGRESSING
		WHERE 
		MODULE_ID = #{moduleId} 
		AND PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>		

	<!-- 강화학습종료 결과데이터 확인-->
	<select id="selectForceLearningBaselineResultCount" parameterType="egovframework.com.stu.learning.vo.Learning" resultType="int">	
		SELECT COUNT(*) 
		FROM XBT_BASELINE_FORCE_LEARNING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}	
	</select>
	
	<!-- 강화학습종료 결과데이터-->
	<update id="updateForceLearningResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_BASELINE_FORCE_LEARNING 
		SET 
			GAIN_SCORE = #{gainScore},
			PASS_YN = #{passYn},
			RIGHT_CNT = #{rightCnt},
			WRONG_CNT = #{wrongCnt},	
			BAN_CNT = #{banCnt}	
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</update>		
	
</mapper>