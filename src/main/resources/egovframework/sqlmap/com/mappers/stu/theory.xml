<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.stu.theory.dao.StuTheoryDAO">
	
	

<!-- 이론  목록 -->
	<select id="selectTheoryList" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT
			QUESTION_NO,
			QUESTION_ID,
			STUDY_LVL,
			QUESTION_TYPE,
			USE_YN,
			LAGE_GROUP_CD,
			MIDDLE_GROUP_CD,
			SMALL_GROUP_CD,
			QUESTION,
			CHOICE1,
			CHOICE2,
			CHOICE3,
			CHOICE4,
			MULTI_PLUS_IMG_NAME,
			ACTION_DIV,
			INSERT_ID,
			INSERT_DATE
		FROM
			XBT_THEORY_QUESTION
		WHERE
		USE_YN = 'Y' 
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}
			ORDER BY RAND() 
		LIMIT #{questionCnt}
	</select>	
	
<!-- 이론  상세 -->
	<select id="selectTheory" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT
			QUESTION_NO,
			QUESTION_ID,
			STUDY_LVL,
			QUESTION_TYPE,
			USE_YN,
			LAGE_GROUP_CD,
			MIDDLE_GROUP_CD,
			SMALL_GROUP_CD,
			QUESTION,
			CHOICE1,
			CHOICE2,
			CHOICE3,
			CHOICE4,
			MULTI_PLUS_IMG_NAME,
			ACTION_DIV,
			INSERT_ID,
			INSERT_DATE
		FROM
			XBT_THEORY_QUESTION		
		WHERE
		USE_YN = 'Y'  
		AND QUESTION_ID = #{questionId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</select>	
	
				
	<!-- 등록된이론문제 횟수확인 -->
	<select id="selectTheoryProblemsMaxkey" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT 
			IFNULL(MAX(TRY_SEQ), 0) AS trySeq
		FROM XBT_STU_THEORY_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}
	</select>	
	
	<!-- 이론평가 유무확인 -->
	<select id="selectTheoryProcessYnCount" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_THEORY_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear}
		AND PROC_SEQ = #{procSeq}
		AND USER_ID = #{userId}	
		AND END_YN = 'Y'
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</select>			
	
	<!-- 등록된이론문제 체크 -->
	<select id="selectTheoryProblemsCount" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="int">
		SELECT 
			COUNT(PROGRESS_NO) 
		FROM XBT_STU_THEORY_PROGRESSING
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}
	</select>	


	<!-- 이론문제 등록 -->
	<insert id="insertTheoryProblems" parameterType="egovframework.com.stu.theory.vo.StuTheory">
		INSERT INTO XBT_STU_THEORY_PROGRESSING(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			TRY_SEQ,
			USER_ID,
			QUESTION_ID,
			QUESTION_TYPE,
			STUDY_LVL,
			LAGE_GROUP_CD,
			MIDDLE_GROUP_CD,
			SMALL_GROUP_CD,
			QUESTION,
			MULTI_PLUS_IMG_NAME,
			CHOICE1,
			CHOICE2,
			CHOICE3,
			CHOICE4,
			ACTION_DIV,
			GAIN_SCORE,
			END_YN,
			INSERT_DATE)
		SELECT
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			#{userId},
			QUESTION_ID,
			QUESTION_TYPE,
			STUDY_LVL,
			LAGE_GROUP_CD,
			MIDDLE_GROUP_CD,
			SMALL_GROUP_CD,
			QUESTION,
			MULTI_PLUS_IMG_NAME,
			CHOICE1,
			CHOICE2,
			CHOICE3,
			CHOICE4,
			ACTION_DIV,
			0,
			'N',
			now()
		FROM
			XBT_THEORY_QUESTION		
		WHERE
		USE_YN = 'Y'  
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}	
			ORDER BY RAND() 
	</insert>
	
	<!-- 이론문제출제목록가져오기 -->
	<select id="selectTheoryProblemsList" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">			
		SELECT 
			QUESTION_ID,
			STUDY_LVL,
			QUESTION_TYPE,
			LAGE_GROUP_CD,
			MIDDLE_GROUP_CD,
			SMALL_GROUP_CD,
			QUESTION,
			CHOICE1,
			CHOICE2,
			CHOICE3,
			CHOICE4,
			MULTI_PLUS_IMG_NAME,
			ACTION_DIV,
			INSERT_DATE,
			USER_ACTION_DIV,
			CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 'Y'
			WHEN ACTION_DIV = '0' and USER_ACTION_DIV = '1' THEN 'H'
			WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 'H'
			WHEN ACTION_DIV = '3' and USER_ACTION_DIV = '4' THEN 'H'
			WHEN ACTION_DIV = '4' and USER_ACTION_DIV = '3' THEN 'H'		
			ELSE 'N' END AS answerYn,  
			INSERT_DATE
		FROM XBT_STU_THEORY_PROGRESSING 
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND END_YN = #{endYn}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}	
	  	ORDER BY RAND()
	</select>
	
	<!-- 오답정답확인 -->
	<select id="selectTheoryAnswer" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT 
			DISTINCT (ACTION_DIV = #{userActionDiv}) as answer,  
			(ACTION_DIV) as answerDiv
		FROM XBT_STU_THEORY_PROGRESSING 
		WHERE 
		PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND QUESTION_ID = #{questionId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</select>		
	
	<!-- 오답문제정답선택-->
	<update id="updateTheoryAnswer" parameterType="egovframework.com.stu.theory.vo.StuTheory">	
		UPDATE 
			XBT_STU_THEORY_PROGRESSING 
		SET 
			USER_ACTION_DIV = #{userActionDiv},
			GAIN_SCORE = #{gainScore}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND QUESTION_ID = #{questionId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</update>	
	
	<!-- 오답문제종료 결과데이터 확인 -->
	<select id="selectTheoryBaselineResultCount" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="int">
		SELECT COUNT(*) 
		FROM XBT_BASELINE_THEORY
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
	</select>	
	
	<!-- 난이도 정보 -->
	<select id="selectStudyLvlTheory" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT SUM(STUDY_LVL)/COUNT(STUDY_LVL) AS studyLvl FROM (
			SELECT STUDY_LVL FROM XBT_STU_THEORY_PROGRESSING 			
			WHERE 
			PROC_CD = #{procCd}  
			AND PROC_YEAR = #{procYear} 
			AND PROC_SEQ = #{procSeq}
			AND TRY_SEQ = #{trySeq}
			AND USER_ID = #{userId}
			AND LAGE_GROUP_CD = #{lageGroupCd} 
			AND MIDDLE_GROUP_CD = #{middleGroupCd}			
			GROUP BY STUDY_LVL
		)T1 
	</select>		
		
		<!-- 결과 등록 -->
	<insert id="insertTheoryResult" parameterType="egovframework.com.stu.theory.vo.StuTheory">	
		INSERT INTO XBT_BASELINE_THEORY(
			PROC_CD,
			PROC_YEAR,
			PROC_SEQ,
			TRY_SEQ,
			USER_ID,
			TEST_DATE,
			STUDY_LVL,
			END_YN,
			INSERT_DATE
		)VALUES(
			#{procCd},
			#{procYear},
			#{procSeq},
			#{trySeq},
			#{userId},
			now(),
			#{studyLvl},
			'Y',
			now()
		)
	</insert>
	
	<!-- 학습종료점수합산 -->
	<select id="selectTheorySum" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT 
			IFNULL(SUM(GAIN_SCORE), 0) AS gainScore
		FROM XBT_STU_THEORY_PROGRESSING 
		WHERE 
		PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</select>		
	
	<!-- 학습종료 틀린갯수 맞은갯수 확인 -->
	<select id="selectTheoryResultCount" parameterType="egovframework.com.stu.theory.vo.StuTheory" resultType="egovframework.com.stu.theory.vo.StuTheory">
		SELECT
			COUNT(*)AS questionCnt,
			COUNT(CASE WHEN ACTION_DIV = USER_ACTION_DIV THEN 1 END) AS rightCnt,
			COUNT(CASE WHEN ACTION_DIV != USER_ACTION_DIV || USER_ACTION_DIV IS NULL THEN 1 END) AS wrongCnt	
		FROM
			XBT_STU_THEORY_PROGRESSING
		WHERE 
		PROC_CD = #{procCd}  
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</select>	
	
	
	<!-- 학습문제종료-->
	<update id="updateTheoryEnd" parameterType="egovframework.com.stu.learning.vo.Learning">	
		UPDATE 
			XBT_STU_THEORY_PROGRESSING 
		SET 
			END_YN = #{endYn}
		WHERE PROC_CD = #{procCd} 
		AND PROC_YEAR = #{procYear} 
		AND PROC_SEQ = #{procSeq}
		AND TRY_SEQ = #{trySeq}
		AND USER_ID = #{userId}
		AND LAGE_GROUP_CD = #{lageGroupCd} 
		AND MIDDLE_GROUP_CD = #{middleGroupCd}		
	</update>	
		
	
	<!-- 학습종료 결과데이터-->
	<update id="updateTheoryResult" parameterType="egovframework.com.stu.learning.vo.Learning">	
		<choose>
			<when test='learningType == "danger"'>
				UPDATE 
					XBT_BASELINE_THEORY 
				SET 
					DANGER_SCORE = #{dangerScore},
					PASS_YN = #{passYn},
					END_YN = 'Y',
					DANGER_RIGHT_CNT = #{rightCnt},
					DANGER_WRONG_CNT = #{wrongCnt}
				WHERE PROC_CD = #{procCd} 
				AND PROC_YEAR = #{procYear} 
				AND PROC_SEQ = #{procSeq}
				AND TRY_SEQ = #{trySeq}
				AND USER_ID = #{userId}
			</when>
			<otherwise>
				UPDATE 
					XBT_BASELINE_THEORY 
				SET 
					GAIN_SCORE = #{gainScore},
					PASS_YN = #{passYn},
					END_YN = 'Y',
					RIGHT_CNT = #{rightCnt},
					WRONG_CNT = #{wrongCnt}
				WHERE PROC_CD = #{procCd} 
				AND PROC_YEAR = #{procYear} 
				AND PROC_SEQ = #{procSeq}
				AND TRY_SEQ = #{trySeq}
				AND USER_ID = #{userId}							
			</otherwise>
		</choose>		
	</update>		
		
</mapper>